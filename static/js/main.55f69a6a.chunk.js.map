{"version":3,"sources":["components/elements/TextArea.tsx","components/container/InputContainer.tsx","components/elements/button/GrayButton.tsx","components/elements/CheckBox.tsx","components/elements/SingleCharInput.tsx","components/controls/InputContainerControl.tsx","components/controls/ResultContainerControl.tsx","components/nav/Nav.tsx","components/footer/Footer.tsx","components/heading/Heading.tsx","components/layouts/Layout.tsx","App.tsx","index.tsx"],"names":["TextArea","name","placeholder","disabled","value","onChangeHandler","className","id","onChange","InputContainer","props","title","desc","containerStyle","disableInput","textAreaValue","textAreaPlaceholder","txtOnChangeHandler","children","GrayButton","onClickHandler","type","onClick","CheckBox","label","SingleCharInput","size","maxLength","InputContainerControl","delimeterValue","buttonClickHandler","delimeterOnChangeHandler","duplicateOnChangeHandler","ResultContainerControl","Nav","brandName","menuItems","key","url","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","href","map","x","target","rel","Footer","currentYear","Date","getFullYear","stroke-linecap","stroke-linejoin","stroke-width","width","height","y","rx","ry","cx","cy","r","Heading","text","Layout","App","useState","inputText","setInputText","resultText","setResultText","delimeter","setDelimeter","setRemoveDuplicates","e","Fragment","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","matchedText","match","matchedTextLength","length","finalText","join","toast","checked","navigator","clipboard","writeText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55f69a6a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ntype TextAreaProp = {\r\n    name: string,\r\n    disabled: boolean,\r\n    value?: string,\r\n    placeholder: string,\r\n    onChangeHandler: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst TextArea: React.FC<TextAreaProp> = ({ name, placeholder, disabled, value, onChangeHandler }) => {\r\n\r\n    return (\r\n        <textarea\r\n            className=\"border w-full h-full box-border resize-none outline-none\"\r\n            name={name}\r\n            id={`txt` + name}\r\n            disabled={disabled}\r\n            onChange={onChangeHandler}\r\n            value={value}\r\n            placeholder={placeholder}\r\n        >\r\n        </textarea>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","import React from 'react'\r\nimport TextArea from '../elements/TextArea';\r\n\r\ntype InputContainerProps = {\r\n    title: string,\r\n    desc: string,\r\n    containerStyle: string,\r\n    disableInput: boolean,\r\n    textAreaValue?: string,\r\n    textAreaPlaceholder: string,\r\n    txtOnChangeHandler: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst InputContainer: React.FC<InputContainerProps> = (props) => {\r\n\r\n    const { title, desc, containerStyle, disableInput, textAreaValue, textAreaPlaceholder, txtOnChangeHandler, children } = props;\r\n\r\n    return (\r\n        <section className={`${containerStyle} m-5 border border-gray-300 shadow-xl rounded-md bg-white`} >\r\n            <div className=\"p-2\">\r\n                <h2 className=\"text-gray-800 text-base\">{title}</h2>\r\n                <span className=\"text-gray-400 text-xs\">{desc}</span>\r\n            </div>\r\n            <div className=\"p-2\">\r\n                <TextArea\r\n                    name=\"InputArea\"\r\n                    disabled={disableInput}\r\n                    value={textAreaValue}\r\n                    onChangeHandler={txtOnChangeHandler}\r\n                    placeholder={textAreaPlaceholder}\r\n                />\r\n            </div>\r\n            <div className=\"p-2 flex gap-2 my-auto\">\r\n                {children}\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default InputContainer;","import React from 'react'\r\n\r\nimport \"./button.css\"\r\n\r\ntype ButtonProps = {\r\n    name: string,\r\n    onClickHandler: () => void\r\n}\r\n\r\nconst GrayButton: React.FC<ButtonProps> = ({ name, onClickHandler }) => {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn text-xs font-bold uppercase\"\r\n            onClick={onClickHandler}\r\n        >\r\n            {name}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default GrayButton\r\n","import React from 'react'\r\n\r\ntype CheckBoxProps = {\r\n    label: string,\r\n    onChangeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst CheckBox: React.FC<CheckBoxProps> = ({ label, onChangeHandler }) => {\r\n    return (\r\n        <label className=\"flex gap-2 leading-normal\">\r\n            <span className=\"text-gray-700 text-xs\">{label}</span>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"h-5 w-5 text-gray-600\"\r\n                onChange={onChangeHandler}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React from 'react'\r\n\r\ntype SingleCharInputProps = {\r\n    label: string,\r\n    value: string\r\n    onChangeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst SingleCharInput: React.FC<SingleCharInputProps> = ({ label, value, onChangeHandler }) => {\r\n    // TODO: Read from config\r\n\r\n    return (\r\n        <label className=\"flex gap-2 leading-normal text-gray-500\">\r\n            <span className=\"text-xs\">{label}</span>\r\n            <input\r\n                type=\"text\"\r\n                size={1}\r\n                maxLength={1}\r\n                className=\"p-1 border border-black rounded-sm w-5 h-5 text-xl outline-none\"\r\n                onChange={onChangeHandler}\r\n                value={value}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SingleCharInput\r\n","import React from 'react'\r\n\r\nimport GrayButton from '../elements/button/GrayButton';\r\nimport CheckBox from '../elements/CheckBox';\r\nimport SingleCharInput from '../elements/SingleCharInput';\r\n\r\ntype InputContainerControlProps = {\r\n    delimeterValue: string,\r\n    buttonClickHandler: () => void,\r\n    delimeterOnChangeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    duplicateOnChangeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n}\r\n\r\nconst InputContainerControl: React.FC<InputContainerControlProps> = ({ delimeterValue, buttonClickHandler, delimeterOnChangeHandler, duplicateOnChangeHandler }) => {\r\n    return (\r\n        <>\r\n            <div className=\"my-auto\">\r\n                <SingleCharInput label=\"Delimeter\" value={delimeterValue} onChangeHandler={delimeterOnChangeHandler} />\r\n            </div>\r\n            <div className=\"my-auto\">\r\n                <CheckBox label=\"Remove Duplicate\" onChangeHandler={duplicateOnChangeHandler} />\r\n            </div>\r\n            <div className=\"my-auto ml-auto\">\r\n                <GrayButton name=\"Extract\" onClickHandler={buttonClickHandler} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputContainerControl\r\n","import React from 'react'\r\n\r\nimport GrayButton from '../elements/button/GrayButton';\r\n\r\ntype ResultContainerControlProps = {\r\n    buttonClickHandler: () => void\r\n}\r\n\r\nconst ResultContainerControl: React.FC<ResultContainerControlProps> = ({ buttonClickHandler }) => {\r\n    return (\r\n        <>\r\n            <div className=\"my-auto ml-auto\">\r\n                <GrayButton name=\"Copy\" onClickHandler={buttonClickHandler} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResultContainerControl\r\n","import React from 'react'\r\n\r\ntype NavBarProps = {\r\n    brandName: string\r\n}\r\n\r\ntype MenuItem = {\r\n    name: string,\r\n    key: string,\r\n    url: string\r\n}\r\n\r\nconst Nav: React.FunctionComponent<NavBarProps> = ({ brandName }) => {\r\n\r\n    const menuItems: Array<MenuItem> = [{\r\n        key: \"1\",\r\n        name: \"github\",\r\n        url: \"https://github.com/ntnr32/email-extractor\"\r\n    }]\r\n\r\n    return (\r\n        <section className=\"navbar\">\r\n            <nav className=\"w-full relative py-3 mb-3 shadow-lg bg-indigo-500\">\r\n                <div className=\"flex  items-center justify-between\">\r\n                    <div className=\"w-full flex justify-between md:w-auto px-4\">\r\n                        <div className=\"flex text-white\">\r\n                            <svg className=\"w-8 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\r\n                            </svg>\r\n                            <a className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-no-wrap uppercase\" href=\"/\">\r\n                                {brandName}\r\n                            </a>\r\n                        </div>\r\n                        {/* <button className=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block md:hidden outline-none focus:outline-none\" type=\"button\">\r\n                            <svg className=\"w-8 text-gray-100\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16m-7 6h7\" />\r\n                            </svg>\r\n                        </button> */}\r\n                    </div>\r\n                    <div className=\"flex flex-row flex-grow items-center\">\r\n                        <ul className=\"flex flex-col md:flex-row list-none ml-auto\">\r\n                            {\r\n                                menuItems && menuItems.map(x => <li className=\"px-4\" key={x.key}>\r\n                                    <a\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        href={x.url}\r\n                                        className=\"px-3 py-2 flex text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\r\n                                    >\r\n                                        {x.name}\r\n                                    </a>\r\n                                </li>)\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    return (\r\n        <footer className=\"text-gray-600 my-auto body-font footer\">\r\n            <div className=\"container px-5 flex items-center sm:flex-row flex-col\">\r\n                <div className=\"flex title-font font-medium items-center md:justify-start justify-center text-gray-900\">\r\n                    <svg className=\"w-8 mr-2 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\r\n                    </svg>\r\n                    <span className=\"ml-3 text-xl\">Email Extractor</span>\r\n                </div>\r\n                <p className=\"text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4\">© {currentYear} Email Extractor —\r\n                    <a href=\"https://github.com/ntnr32/email-extractor\" className=\"text-gray-600 ml-1\" rel=\"noopener noreferrer\" target=\"_blank\">@ntnr32</a>\r\n                </p>\r\n                <span className=\"inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start\">\r\n                    <a href=\"/\" className=\"text-gray-500\">\r\n                        <svg fill=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                            <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\"></path>\r\n                        </svg>\r\n                    </a>\r\n                    <a href=\"/\" className=\"ml-3 text-gray-500\">\r\n                        <svg fill=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                            <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\"></path>\r\n                        </svg>\r\n                    </a>\r\n                    <a href=\"/\" className=\"ml-3 text-gray-500\">\r\n                        <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                            <rect width=\"20\" height=\"20\" x=\"2\" y=\"2\" rx=\"5\" ry=\"5\"></rect>\r\n                            <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\"></path>\r\n                        </svg>\r\n                    </a>\r\n                    <a href=\"/\" className=\"ml-3 text-gray-500\">\r\n                        <svg fill=\"currentColor\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                            <path stroke=\"none\" d=\"M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12H2z\"></path>\r\n                            <circle cx=\"4\" cy=\"4\" r=\"2\" stroke=\"none\"></circle>\r\n                        </svg>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\ntype HeadingProps = {\r\n    text: string\r\n}\r\n\r\nconst Heading = ({ text }: HeadingProps) => {\r\n    return (\r\n        <section id=\"heading\" className=\"heading m-auto text-center\">\r\n            <h1 className=\"text-xl\">{text}</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n","import React from 'react'\r\nimport Nav from '../nav/Nav'\r\n\r\nimport \"./layout.css\";\r\n\r\nimport Footer from '../footer/Footer';\r\nimport Heading from '../heading/Heading';\r\n\r\ntype LayoutPros = {}\r\n\r\nconst Layout: React.FC<LayoutPros> = ({ children }) => {\r\n\r\n    // TODO: Move each section to its own component class\r\n    // TODO: Add typing animation to heading component\r\n    // TODO: Add REGEX and highlight email addresses in the input control container in diff color\r\n\r\n    return (\r\n        <main className=\"grid-container bg-gray-50\">\r\n            <Nav brandName=\"Extract Email Addresses\" />\r\n            <Heading text=\"Export Outlook email recepients email addresses\" />\r\n            {children}\r\n            <Footer />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState } from 'react';\r\n\r\nimport InputContainer from './components/container/InputContainer';\r\nimport InputContainerControl from './components/controls/InputContainerControl';\r\nimport ResultContainerControl from './components/controls/ResultContainerControl';\r\nimport Layout from './components/layouts/Layout';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const defaultDelimeter = \";\";\r\n\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    const [delimeter, setDelimeter] = useState(defaultDelimeter);\r\n    // TODO: Implement Remove duplicates\r\n    const [removeDuplicates, setRemoveDuplicates] = useState(false);\r\n\r\n    const txtOnChangeHandler = (e: React.ChangeEvent<HTMLTextAreaElement>) => setInputText(e.target.value);\r\n    const delimeterOnChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => setDelimeter(e.target.value);\r\n    const duplicateOnChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => setRemoveDuplicates(e.target.checked);\r\n\r\n    const extractClickHandler = () => {\r\n        debugger;\r\n        if (inputText) {\r\n            const matchedText = inputText.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n            const matchedTextLength = matchedText?.length || 0;\r\n            if (matchedText && matchedTextLength > 0) {\r\n                const finalText = matchedText.join(delimeter || defaultDelimeter);\r\n                setResultText(finalText)\r\n            } else {\r\n                toast(\"No Match Found ❗\");\r\n            }\r\n        } else {\r\n            toast(\"Enter some text to extract\");\r\n        }\r\n    }\r\n\r\n    const copyClickHandler = () => {\r\n        if (resultText) {\r\n            if (navigator && navigator.clipboard) {\r\n                navigator.clipboard.writeText(resultText);\r\n                toast(\"Copied to clipboard ❕\");\r\n            } else {\r\n                toast(\"Clipboard not supported\");\r\n            }\r\n        }\r\n        else {\r\n            toast(\"Extract data first\");\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <Layout>\r\n                <ToastContainer\r\n                    position=\"bottom-right\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                <InputContainer\r\n                    title=\"Paste you input data\"\r\n                    desc=\"Insert the list of email address\"\r\n                    containerStyle=\"left-container\"\r\n                    disableInput={false}\r\n                    textAreaPlaceholder=\"John Smith <john@example.com>; Rachel Smith <rachal@exmaple.com>\"\r\n                    txtOnChangeHandler={txtOnChangeHandler}\r\n                >\r\n                    <InputContainerControl\r\n                        delimeterValue={delimeter}\r\n                        buttonClickHandler={extractClickHandler}\r\n                        delimeterOnChangeHandler={delimeterOnChangeHandler}\r\n                        duplicateOnChangeHandler={duplicateOnChangeHandler}\r\n                    />\r\n                </InputContainer>\r\n\r\n                <InputContainer\r\n                    title=\"Delimeter separated email addresses\"\r\n                    desc=\"Extracted email addresses with specified delimeter\"\r\n                    containerStyle=\"right-container\"\r\n                    disableInput={true}\r\n                    textAreaValue={resultText}\r\n                    textAreaPlaceholder=\"Delimeter separated email addresses\"\r\n                    txtOnChangeHandler={txtOnChangeHandler}\r\n                >\r\n                    <ResultContainerControl\r\n                        buttonClickHandler={copyClickHandler}\r\n                    />\r\n                </InputContainer>\r\n            </Layout>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}